<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Button x:Name="EnterButton" Content="Вход" HorizontalAlignment="Center" Margin="0,330,0,0" VerticalAlignment="Top" Height="39" Width="122" Click="EnterButton_Click"/>
        <TextBox x:Name="LoginTextBox" HorizontalAlignment="Left" Margin="314,172,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
        <PasswordBox x:Name="PasswordTextBox" HorizontalAlignment="Left" Margin="314,0,0,0" VerticalAlignment="Center" Width="120"/>
        <Label x:Name="EnterLabel" Content="Label" HorizontalAlignment="Left" Margin="512,190,0,0" VerticalAlignment="Top" Width="278" Height="104"/>

    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            //DataGrid.ItemsSource = ABQBA.db.Users.ToList();
            //MessageBox.Show("aboba" + " " + ABQBA.db.Users.FirstOrDefault().name);

        }

        private void EnterButton_Click(object sender, RoutedEventArgs e)
        {
            string login = LoginTextBox.Text;
            string password = PasswordTextBox.Password;

            if (login.Length == 0 || password.Length == 0)
            {
                MessageBox.Show("Поля не могут быть пустыми");
                return;
            }

            // Поиск пользователя по логину и паролю
            List<Logins_passwords> idUserFromLogins = (from lp in ABQBA.db.Logins_passwords where lp.login == login && lp.password == password select lp).ToList();

            if (idUserFromLogins.Count != 0)
            {
                EnterLabel.Content = ($"Здравствуйте, {idUserFromLogins[0].User.Role.role1}!!!");
                if (idUserFromLogins[0].User.Role.role1 == "admin")
                {
                    PrevAdminWindow prevAdmin = new PrevAdminWindow();
                    prevAdmin.Show();
                    this.Close();
                } else if (idUserFromLogins[0].User.Role.role1 == "user")
                {

                }
            }
            else
            {
            MessageBox.Show("Неправильно введены данные");
            }
        }
    }

    public static class ABQBA
    {
        public static abobaEntities5 db = new abobaEntities5();
    }
}

---

<Window x:Class="WpfApp1.PrevAdminWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="PrevAdminWindow" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <WrapPanel Orientation="Horizontal" Grid.Row="0">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="ForTestAboba" Margin="0 0 5 0" Text="Поиск заказа"></TextBlock>
                <TextBox Width="170" x:Name="SearchTextBox" TextChanged="SearchTextBox_TextChanged"/>
            </StackPanel>
            <Button Margin="500 0 5 0" Content="Назад" Click="Button_Click_2" />
        </WrapPanel>
        <ListView Margin="0 20 0 0" x:Name="AdminOrdersListView" Grid.Row="1">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Индетификатор" DisplayMemberBinding="{Binding id_order}"/>
                    <GridViewColumn Header="Дата" DisplayMemberBinding="{Binding date}"/>
                    <GridViewColumn Header="Статус" DisplayMemberBinding="{Binding status}"/>
                    <GridViewColumn Header="Описание" DisplayMemberBinding="{Binding decription}"/>
                    <GridViewColumn Header="Цена" DisplayMemberBinding="{Binding price}"/>
                    <GridViewColumn Header="Пользователь" DisplayMemberBinding="{Binding User.name}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="Настройка пользователей" Grid.Column="0" Height="50" Width="150" Click="Button_Click_1"></Button>
            <Button Content="Управление сменами" Grid.Column="1" Height="50" Width="150" Click="Button_Click"></Button>
        </Grid>
    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Interaction logic for PrevAdminWindow.xaml
    /// </summary>
    public partial class PrevAdminWindow : Window
    {
        public PrevAdminWindow()
        {
            InitializeComponent();
            UnpdateAdminUsers();

            AdminOrdersListView.ItemsSource = ABQBA.db.Orders.ToList();
        }

        public void UnpdateAdminUsers()
        {
            var currentUsers = ABQBA.db.Orders.ToList();

            
            //currentUsers = currentUsers.Where(u => u.Role.role1.ToLower().Contains(SearchTextBox.Text.ToLower())).ToList если данные в другой таблице
            currentUsers = currentUsers.Where(u => u.date.ToLower().Contains(SearchTextBox.Text.ToLower())).ToList();

            AdminOrdersListView.ItemsSource = currentUsers;
        }

        //редактирование
        private void BtnEditUser_Click(object sender, RoutedEventArgs e)
        {
            EditUserWindow editPage = new EditUserWindow((sender as Button).DataContext as User);
            editPage.Show();
            this.Close();
        }

        private void SearchTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            UnpdateAdminUsers();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            AdminShifts admin = new AdminShifts();
            admin.Show();
            this.Close();
        }

        //удаление
        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            Admin admin = new Admin();
            admin.Show();
            this.Close();
        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            MainWindow main = new MainWindow();
            main.Show();
            this.Close();
        }
    }
}

---

<Window x:Class="WpfApp1.Admin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Admin" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <WrapPanel Orientation="Horizontal" Grid.Row="0">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="ForTestAboba" Margin="0 0 5 0" Text="Поиск польpователя"></TextBlock>
                <TextBox Width="170" x:Name="SearchTextBox" TextChanged="SearchTextBox_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="10 0 5 0" Text="Поиск польpователя"></TextBlock>
                <ComboBox x:Name="AdminComboBox" Width="170" SelectionChanged="ComboBox_SelectionChanged"/>
            </StackPanel>
            <Button Margin="100 0 5 0" Content="Назад" Click="Button_Click_2" />
        </WrapPanel>
        <ListView Margin="0 20 0 0" x:Name="AdminListView" Grid.Row="1">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Имя" DisplayMemberBinding="{Binding name}"/>
                    <GridViewColumn Header="Статус" DisplayMemberBinding="{Binding status}"/>
                    <GridViewColumn Header="Роль" DisplayMemberBinding="{Binding Role.role1}"/>
                    <GridViewColumn Header="Действие" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="BtnEditUser" Click="BtnEditUser_Click" Content="Редактировать" MinWidth="100"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="Удалить" Grid.Column="0" Height="50" Width="150" Click="Button_Click_1"></Button>
            <Button Content="Добавить" Grid.Column="1" Height="50" Width="150" Click="Button_Click"></Button>
        </Grid>
    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Логика взаимодействия для Admin.xaml
    /// </summary>
    public partial class Admin : Window
    {
        public Admin()
        {
            InitializeComponent();
            UnpdateAdminUsers();

            var allStatuses = ABQBA.db.Users.Select(s => s.status).Distinct().ToList(); // Select distinct statuses
            allStatuses.Insert(0, "Все статусы"); // Insert a string representing all statuses

            AdminComboBox.ItemsSource = allStatuses;
            AdminComboBox.SelectedIndex = 0;

            AdminListView.ItemsSource = ABQBA.db.Users.ToList();


        }

        public void UnpdateAdminUsers()
        {
            var currentUsers = ABQBA.db.Users.ToList();

            if (AdminComboBox.SelectedIndex > 0)
            {
                currentUsers = currentUsers.Where(p => p.status.ToString() == AdminComboBox.SelectedItem.ToString()).ToList();
            }
            //currentUsers = currentUsers.Where(u => u.Role.role1.ToLower().Contains(SearchTextBox.Text.ToLower())).ToList если данные в другой таблице
            currentUsers = currentUsers.Where(u => u.name.ToLower().Contains(SearchTextBox.Text.ToLower())).ToList();

            AdminListView.ItemsSource = currentUsers;
        }

        private void ComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            UnpdateAdminUsers();
        }

        //редактирование
        private void BtnEditUser_Click(object sender, RoutedEventArgs e)
        {
            EditUserWindow editPage = new EditUserWindow((sender as Button).DataContext as User);
            editPage.Show();
            this.Close();
        }

        private void SearchTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            UnpdateAdminUsers();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            EditUserWindow edidPage = new EditUserWindow(null);
            edidPage.Show();
            this.Close();
        }
        
        //удаление
        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            var usersForRemoning = AdminListView.SelectedItems.Cast<User>().ToList();

            if (MessageBox.Show($"Вы точно хотите удалить следующие {usersForRemoning.Count()} элеметов?", "Внимание",
                MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            {
                try
                {
                    ABQBA.db.Users.RemoveRange(usersForRemoning);
                    ABQBA.db.SaveChanges();
                    MessageBox.Show("Данные удалены");

                    AdminListView.ItemsSource = ABQBA.db.Users.ToList();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message.ToString());
                }
            }
        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            PrevAdminWindow prevAdmin = new PrevAdminWindow();
            prevAdmin.Show();
            this.Close();
        }
    }
}

---

<Window x:Class="WpfApp1.EditUserWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="EditUserWindow" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="167*"/>
            <ColumnDefinition Width="633*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="TextBoxEditName" Text="имя" Grid.Row="0"></TextBlock>
        <TextBox Text="{Binding name}" Grid.Row="0" Grid.Column="1"></TextBox>

        <TextBlock Text="статус" Grid.Row="1"></TextBlock>
        <ComboBox SelectedItem="{Binding status}" x:Name="ComboBoxEditStatus" Grid.Row="1" Grid.Column="1" SelectionChanged="ComboEditStatus_SelectionChanged"></ComboBox>

        <TextBlock Text="роль" Grid.Row="2"></TextBlock>
        <ComboBox x:Name="ComboBoxEditRole" Grid.Row="2" Grid.Column="1"></ComboBox>

        <Button Grid.Column="1" Content="Сохранить" HorizontalAlignment="Left" Margin="129,27,0,0" Grid.Row="4" VerticalAlignment="Top" Height="50" Width="228" Click="Button_Click"/>
        <Button Content="Назад" HorizontalAlignment="Center" Margin="0,27,0,0" Grid.Row="4" VerticalAlignment="Top" Height="50" Width="147" Click="Button_Back_Click"/>
    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Логика взаимодействия для EditUserWindow.xaml
    /// </summary>
    public partial class EditUserWindow : Window
    {
        private User _currentUser = new User();
        public EditUserWindow(User selectedUser)
        {
            var user = ABQBA.db.Users.ToList();
            InitializeComponent();
            if (selectedUser != null)
                _currentUser = selectedUser;

            DataContext = _currentUser;
            ComboBoxEditStatus.ItemsSource = ABQBA.db.Users.Select(u => u.status.ToString()).Distinct().ToList();

            // Настройка ComboBoxEditRole
            var roles = ABQBA.db.Roles.Select(r => new { id_role = r.id_role, role1 = r.role1 }).ToList();
            //ABQBA.db.Roles.ToList();
            ComboBoxEditRole.ItemsSource = roles;
            ComboBoxEditRole.DisplayMemberPath = "role1"; // Отображение имени роли
            ComboBoxEditRole.SelectedValuePath = "id_role"; // Сохранение ID роли

            Binding binding = new Binding("id_role");
            binding.Source = _currentUser;
            binding.Mode = BindingMode.TwoWay; // Two-way binding
            ComboBoxEditRole.SetBinding(ComboBox.SelectedValueProperty, binding);
        }

        private void ComboEditStatus_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {

        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            StringBuilder errors = new StringBuilder();

            if (string.IsNullOrWhiteSpace(_currentUser.name))
            {
                errors.AppendLine("укажите имя");
            }
            if (_currentUser.status == null)
            {
                errors.AppendLine("укажите стату");
            }
            if (_currentUser.id_role == 0 || _currentUser.id_role > 3)
            {
                errors.AppendLine("укажите роль");
            }

            if (errors.Length > 0)
            {
                MessageBox.Show(errors.ToString());
                return;
            }

            if (_currentUser.id_user == 0)
                ABQBA.db.Users.Add(_currentUser);

            try
            {
                ABQBA.db.SaveChanges();
                MessageBox.Show("Сохранено");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
            }
        }

        private void Button_Back_Click(object sender, RoutedEventArgs e)
        {
            Admin admin = new Admin();
            this.Close();
            admin.Show();
        }
    }
}

---

<Window x:Class="WpfApp1.AdminShifts"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="AdminShifts" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <WrapPanel Orientation="Horizontal" Grid.Row="0">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="ForTestAboba" Margin="0 0 5 0" Text="Поиск пользователя"></TextBlock>
                <TextBox Width="170" x:Name="SearchTextBox" TextChanged="SearchTextBox_TextChanged"/>
            </StackPanel>
            <Button Margin="400 0 5 0" Content="Назад" Click="Button_Click_2" />
        </WrapPanel>
        <ListView Margin="0 20 0 0" x:Name="AdminShiftsListView" Grid.Row="1">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Дата" DisplayMemberBinding="{Binding data}"/>
                    <GridViewColumn Header="Имя" DisplayMemberBinding="{Binding User.name}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="Удалить" Grid.Column="0" Height="50" Width="150" Click="Button_Click_1"></Button>
            <Button Content="Добавить" Grid.Column="1" Height="50" Width="150" Click="Button_Click"></Button>
        </Grid>
    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Interaction logic for AdminShifts.xaml
    /// </summary>
    public partial class AdminShifts : Window
    {
        public AdminShifts()
        {
            InitializeComponent();
            

            AdminShiftsListView.ItemsSource = ABQBA.db.Shifts.ToList();
        }

        public void UnpdateAdminUsers()
        {
            var currentUsers = ABQBA.db.Shifts.ToList();
            currentUsers = currentUsers.Where(u => u.User.name.ToLower().Contains(SearchTextBox.Text.ToLower())).ToList();

            AdminShiftsListView.ItemsSource = currentUsers;
        }

        //редактирование
        private void BtnEditUser_Click(object sender, RoutedEventArgs e)
        {
            EditUserWindow editPage = new EditUserWindow((sender as Button).DataContext as User);
            editPage.Show();
            this.Close();
        }

        private void SearchTextBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            UnpdateAdminUsers();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            AdminAddShift admin = new AdminAddShift();
            admin.Show();
            this.Close();
        }

        //удаление
        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            Admin admin = new Admin();
            admin.Show();
            this.Close();
        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            Admin admin = new Admin();
            admin.Show();
            this.Close();
        }
    }
}

---

<Window x:Class="WpfApp1.AdminAddShift"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="AdminShifts" Height="450" Width="800"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="167*"/>
            <ColumnDefinition Width="633*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="имя" Grid.Row="0"></TextBlock>
        <ComboBox x:Name="ComboBoxSetName" Grid.Row="0" Grid.Column="1"></ComboBox>

        <TextBlock  Text="дата" Grid.Row="1"></TextBlock>
        <TextBox x:Name="TextSetData" Text="{Binding data}" Grid.Row="1" Grid.Column="1"></TextBox>

        <Button Grid.Column="1" Content="Сохранить" HorizontalAlignment="Left" Margin="129,27,0,0" Grid.Row="4" VerticalAlignment="Top" Height="50" Width="228" Click="Button_Click"/>
        <Button Content="Назад" HorizontalAlignment="Center" Margin="0,27,0,0" Grid.Row="4" VerticalAlignment="Top" Height="50" Width="147" Click="Button_Back_Click"/>
    </Grid>
</Window>
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace WpfApp1
{
    /// <summary>
    /// Interaction logic for AdminAddShift.xaml
    /// </summary>
    public partial class AdminAddShift : Window
    {
        private Shift _currentShift = new Shift();
        public AdminAddShift()
        {
            InitializeComponent();
            DataContext = _currentShift;

            var users = ABQBA.db.Users.Select(r => new { id_user = r.id_user, name = r.name }).ToList();
            //ABQBA.db.Roles.ToList();
            ComboBoxSetName.ItemsSource = users;
            ComboBoxSetName.DisplayMemberPath = "name"; // Отображение имени роли
            ComboBoxSetName.SelectedValuePath = "id_user"; // Сохранение ID роли

            Binding binding = new Binding("id_user");
            binding.Source = _currentShift;
            binding.Mode = BindingMode.TwoWay; // Two-way binding
            ComboBoxSetName.SetBinding(ComboBox.SelectedValueProperty, binding);
        }

        private void Button_Back_Click(object sender, RoutedEventArgs e)
        {
            AdminShifts admin = new AdminShifts();
            admin.Show();
            this.Close();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            StringBuilder errors = new StringBuilder();

            string dateFormat = "dd.MM.yyyy";
            DateTime parsedDate;

            if (DateTime.TryParseExact(TextSetData.Text, dateFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out parsedDate))
            {
                ABQBA.db.Shifts.Add(_currentShift);
                ABQBA.db.SaveChanges();
                MessageBox.Show("Все гуд");
            }
            else
            {
                MessageBox.Show("Неправильный ввод даты");
            }
        }
    }
}


======


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class abobaEntities5 : DbContext
    {
        public abobaEntities5()
            : base("name=abobaEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Logins_passwords> Logins_passwords { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Shift> Shifts { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<User> Users { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class Logins_passwords
    {
        public int id_login { get; set; }
        public Nullable<int> id_user { get; set; }
        public string login { get; set; }
        public string password { get; set; }
    
        public virtual User User { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class Order
    {
        public int id_order { get; set; }
        public string date { get; set; }
        public string status { get; set; }
        public string decription { get; set; }
        public string price { get; set; }
        public int id_user { get; set; }
    
        public virtual User User { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class Role
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Role()
        {
            this.Users = new HashSet<User>();
        }
    
        public int id_role { get; set; }
        public string role1 { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<User> Users { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class Shift
    {
        public int id_shift { get; set; }
        public string data { get; set; }
        public int id_user { get; set; }
    
        public virtual User User { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class Status
    {
        public int id_status { get; set; }
        public string status_name { get; set; }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1
{
    using System;
    using System.Collections.Generic;
    
    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.Logins_passwords = new HashSet<Logins_passwords>();
            this.Orders = new HashSet<Order>();
            this.Shifts = new HashSet<Shift>();
        }
    
        public int id_user { get; set; }
        public string name { get; set; }
        public string status { get; set; }
        public int id_role { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Logins_passwords> Logins_passwords { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Orders { get; set; }
        public virtual Role Role { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Shift> Shifts { get; set; }
    }
}








